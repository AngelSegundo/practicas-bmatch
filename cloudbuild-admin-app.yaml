steps:
  # Docker build
  - id: "Build docker image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/admin-api-$BRANCH_NAME:$COMMIT_SHA",
        "-t",
        "gcr.io/$PROJECT_ID/admin-api-service:latest",
        "--file",
        "Dockerfile.admin-api",
        "--build-arg",
        "project_name=$_PROJECT_ID",
        "--build-arg",
        "sendgrid_api_key=$_SENDGRID_API_KEY",
        "--build-arg",
        "files_bucket=$_FILES_BUCKET",
        ".",
      ]
  # Docker push
  - id: "Push docker image to container registry"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/admin-api-$BRANCH_NAME:$COMMIT_SHA"]
  # Run service
  - id: "Create cloud run service"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "admin-api-service",
        "--image",
        "gcr.io/$PROJECT_ID/admin-api-$BRANCH_NAME:$COMMIT_SHA",
        "--region",
        "$_DEPLOY_REGION",
        "--allow-unauthenticated",
        "--set-env-vars",
        "SENDGRID_API_KEY=$_SENDGRID_API_KEY",
        "--set-env-vars",
        "FILES_BUCKET=$_FILES_BUCKET",
      ]
  - id: "Print environment variables"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "echo"
    args:
      [
        "Files Bucket: $_FILES_BUCKET",
      ]
images:
  - gcr.io/$PROJECT_ID/admin-api-service:latest
