steps:
  # Docker build
  - id: "Build docker image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/batch-server-$BRANCH_NAME:$COMMIT_SHA",
        "-t",
        "gcr.io/$PROJECT_ID/batch-server-service:latest",
        "--file",
        "apps/batch/Dockerfile.batch-server",
        "--build-arg",
        "project_name=$_PROJECT_ID",
        ".",
      ]
  # Docker push
  - id: "Push docker image to container registry"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/batch-server-$BRANCH_NAME:$COMMIT_SHA"]
  # Run service
  - id: "Create cloud run service"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "batch-server-service",
        "--image",
        "gcr.io/$PROJECT_ID/batch-server-$BRANCH_NAME:$COMMIT_SHA",
        "--region",
        "$_DEPLOY_REGION",
        "--allow-unauthenticated",
        "--ingress",
        "all",
        "--set-env-vars",
        "SCRAPPER_API_URL=$_SCRAPPING_API",
        "--set-env-vars",
        "MINER_API_URL=$_MINING_API",
        "--set-env-vars",
        "GOOGLE_CHAT_MESSAGE_SERVICE_KEY=$_CHAT_KEY",
        "--set-env-vars",
        "GOOGLE_CHAT_MESSAGE_SERVICE_TOKEN=$_CHAT_TOKEN",
      ]
images:
  - gcr.io/$PROJECT_ID/batch-server-service:latest
